#############################################################################
# Makefile for building: dilay
# Generated by qmake (2.01a) (Qt 4.8.3) on: Wed Nov 28 21:54:44 2012
# Project:  qt.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile qt.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include -Isrc -Isrc/view -I/usr/X11R6/include -Imoc
LINK          = g++
LFLAGS        = -m64 -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib64 -lGLEW -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = src/adaptive-mesh.cpp \
		src/camera.cpp \
		src/depth.cpp \
		src/id.cpp \
		src/main.cpp \
		src/mesh.cpp \
		src/opengl.cpp \
		src/ray.cpp \
		src/state.cpp \
		src/triangle.cpp \
		src/util.cpp \
		src/view/gl-widget.cpp \
		src/view/mouse-movement.cpp \
		src/winged-edge.cpp \
		src/winged-face.cpp \
		src/winged-mesh.cpp \
		src/winged-vertex.cpp moc/moc_gl-widget.cpp
OBJECTS       = obj/adaptive-mesh.o \
		obj/camera.o \
		obj/depth.o \
		obj/id.o \
		obj/main.o \
		obj/mesh.o \
		obj/opengl.o \
		obj/ray.o \
		obj/state.o \
		obj/triangle.o \
		obj/util.o \
		obj/gl-widget.o \
		obj/mouse-movement.o \
		obj/winged-edge.o \
		obj/winged-face.o \
		obj/winged-mesh.o \
		obj/winged-vertex.o \
		obj/moc_gl-widget.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		qt.pro
QMAKE_TARGET  = dilay
DESTDIR       = 
TARGET        = dilay

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: qt.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile qt.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/opengl.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile qt.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/dilay1.0.0 || $(MKDIR) obj/dilay1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/dilay1.0.0/ && $(COPY_FILE) --parents src/adaptive-mesh.hpp src/camera.hpp src/depth.hpp src/id.hpp src/intersection.hpp src/linked-list.hpp src/maybe.hpp src/mesh.hpp src/opengl.hpp src/ray.hpp src/state.hpp src/triangle.hpp src/util.hpp src/view/gl-widget.hpp src/view/mouse-movement.hpp src/winged-edge.hpp src/winged-face.hpp src/winged-mesh.hpp src/winged-vertex.hpp obj/dilay1.0.0/ && $(COPY_FILE) --parents src/adaptive-mesh.cpp src/camera.cpp src/depth.cpp src/id.cpp src/main.cpp src/mesh.cpp src/opengl.cpp src/ray.cpp src/state.cpp src/triangle.cpp src/util.cpp src/view/gl-widget.cpp src/view/mouse-movement.cpp src/winged-edge.cpp src/winged-face.cpp src/winged-mesh.cpp src/winged-vertex.cpp obj/dilay1.0.0/ && (cd `dirname obj/dilay1.0.0` && $(TAR) dilay1.0.0.tar dilay1.0.0 && $(COMPRESS) dilay1.0.0.tar) && $(MOVE) `dirname obj/dilay1.0.0`/dilay1.0.0.tar.gz . && $(DEL_FILE) -r obj/dilay1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc/moc_gl-widget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc/moc_gl-widget.cpp
moc/moc_gl-widget.cpp: src/view/mouse-movement.hpp \
		src/maybe.hpp \
		src/util.hpp \
		src/view/gl-widget.hpp
	/usr/bin/moc $(DEFINES) $(INCPATH) src/view/gl-widget.hpp -o moc/moc_gl-widget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

obj/adaptive-mesh.o: src/adaptive-mesh.cpp src/adaptive-mesh.hpp \
		src/winged-mesh.hpp \
		src/mesh.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/util.hpp \
		src/triangle.hpp \
		src/maybe.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/intersection.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/adaptive-mesh.o src/adaptive-mesh.cpp

obj/camera.o: src/camera.cpp src/camera.hpp \
		src/ray.hpp \
		src/opengl.hpp \
		src/maybe.hpp \
		src/util.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/camera.o src/camera.cpp

obj/depth.o: src/depth.cpp src/depth.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/depth.o src/depth.cpp

obj/id.o: src/id.cpp src/id.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/id.o src/id.cpp

obj/main.o: src/main.cpp src/view/gl-widget.hpp \
		src/view/mouse-movement.hpp \
		src/maybe.hpp \
		src/util.hpp \
		src/state.hpp \
		src/winged-mesh.hpp \
		src/mesh.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/triangle.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/intersection.hpp \
		src/camera.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o src/main.cpp

obj/mesh.o: src/mesh.cpp src/mesh.hpp \
		src/state.hpp \
		src/winged-mesh.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/util.hpp \
		src/triangle.hpp \
		src/maybe.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/intersection.hpp \
		src/camera.hpp \
		src/opengl.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/mesh.o src/mesh.cpp

obj/opengl.o: src/opengl.cpp src/opengl.hpp \
		src/maybe.hpp \
		src/util.hpp \
		src/state.hpp \
		src/winged-mesh.hpp \
		src/mesh.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/triangle.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/intersection.hpp \
		src/camera.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/opengl.o src/opengl.cpp

obj/ray.o: src/ray.cpp src/ray.hpp \
		src/util.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ray.o src/ray.cpp

obj/state.o: src/state.cpp src/state.hpp \
		src/winged-mesh.hpp \
		src/mesh.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/util.hpp \
		src/triangle.hpp \
		src/maybe.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/intersection.hpp \
		src/camera.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/state.o src/state.cpp

obj/triangle.o: src/triangle.cpp src/triangle.hpp \
		src/maybe.hpp \
		src/util.hpp \
		src/ray.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/triangle.o src/triangle.cpp

obj/util.o: src/util.cpp src/util.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/util.o src/util.cpp

obj/gl-widget.o: src/view/gl-widget.cpp src/view/gl-widget.hpp \
		src/view/mouse-movement.hpp \
		src/maybe.hpp \
		src/util.hpp \
		src/opengl.hpp \
		src/state.hpp \
		src/winged-mesh.hpp \
		src/mesh.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/triangle.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/intersection.hpp \
		src/camera.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/gl-widget.o src/view/gl-widget.cpp

obj/mouse-movement.o: src/view/mouse-movement.cpp src/view/mouse-movement.hpp \
		src/maybe.hpp \
		src/util.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/mouse-movement.o src/view/mouse-movement.cpp

obj/winged-edge.o: src/winged-edge.cpp src/util.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/triangle.hpp \
		src/maybe.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/winged-mesh.hpp \
		src/mesh.hpp \
		src/intersection.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/winged-edge.o src/winged-edge.cpp

obj/winged-face.o: src/winged-face.cpp src/winged-face.hpp \
		src/id.hpp \
		src/util.hpp \
		src/triangle.hpp \
		src/maybe.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/winged-edge.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/winged-face.o src/winged-face.cpp

obj/winged-mesh.o: src/winged-mesh.cpp src/winged-mesh.hpp \
		src/mesh.hpp \
		src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/util.hpp \
		src/triangle.hpp \
		src/maybe.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/intersection.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/winged-mesh.o src/winged-mesh.cpp

obj/winged-vertex.o: src/winged-vertex.cpp src/winged-edge.hpp \
		src/id.hpp \
		src/winged-vertex.hpp \
		src/linked-list.hpp \
		src/winged-face.hpp \
		src/util.hpp \
		src/triangle.hpp \
		src/maybe.hpp \
		src/ray.hpp \
		src/depth.hpp \
		src/winged-mesh.hpp \
		src/mesh.hpp \
		src/intersection.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/winged-vertex.o src/winged-vertex.cpp

obj/moc_gl-widget.o: moc/moc_gl-widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_gl-widget.o moc/moc_gl-widget.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

